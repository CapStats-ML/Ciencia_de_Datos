Proporcion = as.vector(Prop_glyburide_metformin)
)
T_Prop_glyburide_metformin <- T_Prop_glyburide_metformin[order(T_Prop_glyburide_metformin$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_glyburide_metformin,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Glyburide-Metformin"
)
T_Prop_glyburide_metformin %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN GLYBURIDE-METFORMIN",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Glyburide_Metformin = case_when(
`glyburide-metformin:Down` == 1 ~ "Disminuido",
`glyburide-metformin:No` == 1 ~ "No",
`glyburide-metformin:Steady` == 1 ~ "Estable",
`glyburide-metformin:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`glyburide-metformin:Down`, -`glyburide-metformin:No`, -`glyburide-metformin:Steady`, -`glyburide-metformin:Up`)
# Para A1Cresult ----
A1Cresult <- c("A1Cresult:Norm", "A1Cresult:None", "A1Cresult:>7", "A1Cresult:>8")
Prop_A1Cresult <- sapply(data[A1Cresult], mean)
T_Prop_A1Cresult <- data.frame(
Variable = A1Cresult,
Proporcion = as.vector(Prop_A1Cresult)
)
T_Prop_A1Cresult <- T_Prop_A1Cresult[order(T_Prop_A1Cresult$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_A1Cresult,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en A1Cresult"
)
T_Prop_A1Cresult %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN A1CRESULT",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(A1Cresult = case_when(
`A1Cresult:Norm` == 1 ~ "Normal",
`A1Cresult:None` == 1 ~ "No",
`A1Cresult:>7` == 1 ~ "Mayor a 7",
`A1Cresult:>8` == 1 ~ "Mayor a 8",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`A1Cresult:Norm`, -`A1Cresult:None`, -`A1Cresult:>7`, -`A1Cresult:>8`)
# Para max_glu_serum ----
max_glu_serum <- c("max_glu_serum:Norm", "max_glu_serum:None", "max_glu_serum:>200", "max_glu_serum:>300")
Prop_max_glu_serum <- sapply(data[max_glu_serum], mean)
T_Prop_max_glu_serum <- data.frame(
Variable = max_glu_serum,
Proporcion = as.vector(Prop_max_glu_serum)
)
T_Prop_max_glu_serum <- T_Prop_max_glu_serum[order(T_Prop_max_glu_serum$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_max_glu_serum,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Max Glu Serum"
)
T_Prop_max_glu_serum %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN MAX GLU SERUM",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Max_Glu_Serum = case_when(
`max_glu_serum:Norm` == 1 ~ "Normal",
`max_glu_serum:None` == 1 ~ "No",
`max_glu_serum:>200` == 1 ~ "Mayor a 200",
`max_glu_serum:>300` == 1 ~ "Mayor a 300",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`max_glu_serum:Norm`, -`max_glu_serum:None`, -`max_glu_serum:>200`, -`max_glu_serum:>300`)
# VARIABLES NUMERICAS ----
str(data)
summary(data$time_in_hospital)
summary_time_in_hospital <- summary(data$time_in_hospital)
kable(
summary_time_in_hospital,
format = "markdown",
col.names = c("Variable", "Valor"),
caption = "Resumen de la variable Time in Hospital"
)
# Crear el resumen como un vector nombrado
summary_time_in_hospital <- summary(data$time_in_hospital)
# Convertir el vector a un data.frame
summary_time_in_hospital_df <- data.frame(
Variable = names(summary_time_in_hospital),
Valor = as.numeric(summary_time_in_hospital)
)
# Mostrar con kable
kable(
summary_time_in_hospital_df,
format = "markdown",
caption = "Resumen de la variable Time in Hospital"
)
data %>%
ggplot(aes(x = time_in_hospital)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DEL TIEMPO EN EL HOSPITAL",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Días en el hospital", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
summary_num_lab_procedures <- summary(data$num_lab_procedures)
summary_num_lab_procedures_df <- data.frame(
Variable = names(summary_num_lab_procedures),
Valor = as.numeric(summary_num_lab_procedures)
)
kable(
summary_num_lab_procedures_df,
format = "markdown",
caption = "Resumen de la variable Num Lab Procedures"
)
data %>%
ggplot(aes(x = num_lab_procedures)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE PROCEDIMIENTOS DE LABORATORIO",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de procedimientos", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
data %>%
ggplot(aes(x = num_lab_procedures)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE PROCEDIMIENTOS DE LABORATORIO",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de procedimientos", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
summary_num_procedures <- summary(data$num_procedures)
summary_num_procedures_df <- data.frame(
Variable = names(summary_num_procedures),
Valor = as.numeric(summary_num_procedures)
)
kable(
summary_num_procedures_df,
format = "markdown",
caption = "Resumen de la variable Num Procedures"
)
data %>%
ggplot(aes(x = num_procedures)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE PROCEDIMIENTOS",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de procedimientos", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
summary_num_medications <- summary(data$num_medications)
summary_num_medications_df <- data.frame(
Variable = names(summary_num_medications),
Valor = as.numeric(summary_num_medications)
)
kable(
summary_num_medications_df,
format = "markdown",
caption = "Resumen de la variable Num Medications"
)
data %>%
ggplot(aes(x = num_medications)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE MEDICAMENTOS",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de medicamentos", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
summary_number_outpatient <- summary(data$number_outpatient)
summary_number_outpatient_df <- data.frame(
Variable = names(summary_number_outpatient),
Valor = as.numeric(summary_number_outpatient)
)
kable(
summary_number_outpatient_df,
format = "markdown",
caption = "Resumen de la variable Number Outpatient"
)
data %>%
ggplot(aes(x = number_outpatient)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE VISITAS AMBULATORIAS",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de visitas", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
data %>%
ggplot(aes(x = number_outpatient)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE VISITAS AMBULATORIAS",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de visitas", y = "Frecuencia") +
xlim(0, 10) +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
data %>%
ggplot(aes(x = number_outpatient)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE VISITAS AMBULATORIAS",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de visitas", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
summary_number_emergency <- summary(data$number_emergency)
summary_number_emergency_df <- data.frame(
Variable = names(summary_number_emergency),
Valor = as.numeric(summary_number_emergency)
)
kable(
summary_number_emergency_df,
format = "markdown",
caption = "Resumen de la variable Number Emergency"
)
data %>%
ggplot(aes(x = number_emergency)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE VISITAS DE EMERGENCIA",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de visitas", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
data %>%
ggplot(aes(x = number_emergency)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "steelblue") +
ggtitle(label = "DISTRIBUCIÓN DE VISITAS DE EMERGENCIA",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de visitas", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
summary_number_inpatient <- summary(data$number_inpatient)
summary_number_inpatient_df <- data.frame(
Variable = names(summary_number_inpatient),
Valor = as.numeric(summary_number_inpatient)
)
kable(
summary_number_inpatient_df,
format = "markdown",
caption = "Resumen de la variable Number Inpatient"
)
data %>%
ggplot(aes(x = number_inpatient)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE VISITAS HOSPITALARIAS",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de visitas", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
summary_number_diagnoses <- summary(data$number_diagnoses)
summary_number_diagnoses_df <- data.frame(
Variable = names(summary_number_diagnoses),
Valor = as.numeric(summary_number_diagnoses)
)
kable(
summary_number_diagnoses_df,
format = "markdown",
caption = "Resumen de la variable Number Diagnoses"
)
data %>%
ggplot(aes(x = number_diagnoses)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
ggtitle(label = "DISTRIBUCIÓN DE DIAGNÓSTICOS",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Número de diagnósticos", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
summary_change <- summary(data$change)
summary_change_df <- data.frame(
Variable = names(summary_change),
Valor = as.numeric(summary_change)
)
kable(
summary_change_df,
format = "markdown",
caption = "Resumen de la variable Change"
)
data %>%
ggplot(aes(x = change)) +
geom_bar(fill = "steelblue") +
ggtitle(label = "CAMBIO DE MEDICAMENTOS",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Cambio", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
Prop_change <- sapply(data["change"], mean)
Prop_change
T_Prob_change <- data.frame(
Variable = "change",
Proporcion = as.vector(Prop_change)
)
T_Prob_change
T_Prop_change <- T_Prob_change[order(T_Prob_change$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_change,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Change"
)
T_Prop_change %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN CHANGE",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
summary_diabetesMed <- summary(data$diabetesMed)
summary_diabetesMed_df <- data.frame(
Variable = names(summary_diabetesMed),
Valor = as.numeric(summary_diabetesMed)
)
kable(
summary_diabetesMed_df,
format = "markdown",
caption = "Resumen de la variable DiabetesMed"
)
data %>%
ggplot(aes(x = diabetesMed)) +
geom_bar(fill = "steelblue") +
ggtitle(label = "DIABETES MEDICAMENTOS",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Diabetes Medicamentos", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
summary_readmitted <- summary(data$readmitted)
summary_readmitted_df <- data.frame(
Variable = names(summary_readmitted),
Valor = as.numeric(summary_readmitted)
)
kable(
summary_readmitted_df,
format = "markdown",
caption = "Resumen de la variable Readmitted"
)
data %>%
ggplot(aes(x = readmitted)) +
geom_bar(fill = "steelblue") +
ggtitle(label = "DISTRIBUCIÓN DE READMISIONES",
subtitle = "PACIENTES CON DIABETES") +
labs(x = "Readmitido", y = "Frecuencia") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
Prop_diabetesMed <- sapply(data["diabetesMed"], mean)
T_Proportion_diabetesMed <- data.frame(
Variable = "diabetesMed",
Proporcion = as.vector(Prop_diabetesMed)
)
T_Proportion_diabetesMed <- T_Proportion_diabetesMed[order(T_Proportion_diabetesMed$Proporcion, decreasing = TRUE), ]
kable(
T_Proportion_diabetesMed,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en DiabetesMed"
)
T_Proportion_diabetesMed %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN DIABETESMED",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
T_Proportion_diabetesMed %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE PACIENTES QUE RECIBEN MEDICAMENTOD PARA LA DIABETES",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
Prop_readmitted <- sapply(data[readmitted], mean)
srt(data)
str(data)
Prop_readmitted <- sapply(data[readmitted], mean)
Prop_readmitted
Prop_readmitted <- sapply(data$readmitted, mean)
Prop_readmitted
Prop_readmitted <- sapply(data["readmitted"], mean)
Prop_readmitted
Prop_readmitted <- sapply(data["readmitted"], mean)
T_Prop_readmitted <- data.frame(
Variable = "readmitted",
Proporcion = as.vector(Prop_readmitted)
)
T_Prop_readmitted <- T_Prop_readmitted[order(T_Prop_readmitted$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_readmitted,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Readmitted"
)
T_Prop_readmitted %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN READMITTED",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
str(data)
knitr::opts_chunk$set(
echo = TRUE,         # Mostrar el código en el documento
warning = FALSE,     # Ocultar warnings
message = FALSE,     # Ocultar mensajes
fig.width = 10,       # Ancho de las figuras
fig.height = 7,      # Alto de las figuras
fig.align = 'center' # Alinear las figuras en el centro
)
# Seleccionar solo las columnas numéricas
numerical_vars <- data[, c("time_in_hospital", "num_lab_procedures", "num_procedures",
"num_medications", "number_outpatient", "number_emergency",
"number_inpatient", "number_diagnoses")]
# Calcular la matriz de correlación
correlation_matrix <- cor(numerical_vars)
# Mostrar la matriz de correlación usando kable
kable(correlation_matrix, format = "html", caption = "Matriz de Correlación de Variables Numéricas")
# Seleccionar solo las columnas numéricas
numerical_vars <- data[, c("time_in_hospital", "num_lab_procedures", "num_procedures",
"num_medications", "number_outpatient", "number_emergency",
"number_inpatient", "number_diagnoses")]
# Calcular la matriz de correlación
correlation_matrix <- cor(numerical_vars)
# Mostrar la matriz de correlación usando kable
kable(correlation_matrix, format = "markdown", caption = "Matriz de Correlación de Variables Numéricas")
