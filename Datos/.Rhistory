line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
par(mar = c(3, 4.1, 4.1, 2.1))
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = NA, y = NA, xlim = c(2013, 2024),
ylim = c(min(sapply(pm25$PM2.5, min, na.rm = TRUE)) - 50,
max(sapply(pm25$PM2.5, max, na.rm = TRUE)) + 50),
main = 'Indice PM25 de Calidad del Aire', xlab = NA, ylab = 'Indice PM25')
par(mar = c(3, 4.1, 4.1, 2.1))
4.1, 2.1))
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = NA, y = NA, xlim = c(2013, 2024),
ylim = c(min(sapply(pm25$PM2.5, min, na.rm = TRUE)) - 50,
max(sapply(pm25$PM2.5, max, na.rm = TRUE)) + 50),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(v = seq(2013, 2024, by = 0.5), col = 'gray', lty = 'dashed')
abline(h = seq(0, 5000, by = 500), col = 'gray', lty = 'dashed')
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = NA, y = NA, xlim = c(2013, 2024),
ylim = c(min(sapply(pm25$PM2.5, min, na.rm = TRUE)) - 50,
max(sapply(pm25$PM2.5, max, na.rm = TRUE)) + 50),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(v = seq(2013, 2024, by = 0.5), col = 'gray', lty = 'dashed')
abline(h = seq(0, 500, by = 50), col = 'gray', lty = 'dashed')
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = NA, y = NA, xlim = c(2013, 2024),
ylim = c(min(sapply(pm25$PM2.5, min, na.rm = TRUE)) - 50,
max(sapply(pm25$PM2.5, max, na.rm = TRUE)) + 50),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(v = seq(2013, 2024, by = 0.5), col = 'gray', lty = 'dashed')
abline(h = seq(0, 500, by = 10), col = 'gray', lty = 'dashed')
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = NA, y = NA, xlim = c(2013, 2024),
ylim = c(min(sapply(pm25$PM2.5, min, na.rm = TRUE)),
max(sapply(pm25$PM2.5, max, na.rm = TRUE))),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(v = seq(2013, 2024, by = 0.5), col = 'gray', lty = 'dashed')
abline(h = seq(0, 500, by = 10), col = 'gray', lty = 'dashed')
lines(pm25$`Fecha inicial`, pm25$`PM2.5`, col = 'red3', lwd = 2)
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = NA, y = NA, xlim = c(2013, 2024),
ylim = c(min(sapply(pm25$PM2.5, min, na.rm = TRUE)),
max(sapply(pm25$PM2.5, max, na.rm = TRUE))),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(v = seq(2013, 2024, by = 0.5), col = 'gray', lty = 'dashed')
abline(h = seq(0, 500, by = 10), col = 'gray', lty = 'dashed')
lines(pm25$`Fecha inicial`, pm25$`PM2.5`, col = 'red3', lwd = 2)
# Definir los límites de los ejes
xlim_range <- range(pm25$`Fecha inicial`, na.rm = TRUE)
ylim_range <- range(pm25$PM2.5, na.rm = TRUE)
# Grafico principal
plot(x = NA, y = NA, xlim = xlim_range, ylim = ylim_range,
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Líneas de referencia
abline(v = seq(as.Date("2013-01-01"), as.Date("2024-12-31"), by = "6 months"), col = 'gray', lty = 'dashed')
abline(h = seq(0, 500, by = 10), col = 'gray', lty = 'dashed')
# Serie de tiempo
lines(pm25$`Fecha inicial`, pm25$PM2.5, col = 'red3', lwd = 1)
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = NA, y = NA, xlim = c(min(pm25$`Fecha inicial`), max(pm25$`Fecha inicial`)),
ylim = c(min(pm25$PM2.5), max(pm25$PM2.5)),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(v = seq(2013, 2024, by = 0.5), col = 'gray', lty = 'dashed')
abline(h = seq(0, 500, by = 10), col = 'gray', lty = 'dashed')
lines(pm25$`Fecha inicial`, pm25$`PM2.5`, col = 'red3', lwd = 1)
# Definir los límites de los ejes
xlim_range <- range(pm25$`Fecha inicial`, na.rm = TRUE)
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = pm25$`Fecha inicial`, y = NA,
ylim = c(min(pm25$PM2.5), max(pm25$PM2.5)),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = pm25$`Fecha inicial`, y = pm25$PM2.5),
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = pm25$`Fecha inicial`, y = pm25$PM2.5,
ylim = c(min(pm25$PM2.5), max(pm25$PM2.5)),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = pm25$`Fecha inicial`, y = pm25$PM2.5, type = 'l', col = 'red3', lwd = 1,
ylim = c(min(pm25$PM2.5), max(pm25$PM2.5)),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(v = seq(2013, 2024, by = 0.5), col = 'gray', lty = 'dashed')
abline(h = seq(0, 500, by = 10), col = 'gray', lty = 'dashed')
# Reference lines
abline(v = seq(2013, 2024, by = 0.5), col = 'gray', lty = 'dashed')
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = pm25$`Fecha inicial`, y = pm25$PM2.5, type = 'l', col = 'red3', lwd = 1,
ylim = c(min(pm25$PM2.5), max(pm25$PM2.5)),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(v = seq(2013, 2024, by = 1), col = 'gray', lty = 'dashed')
abline(h = seq(0, 200, by = 10), col = 'gray', lty = 'dashed')
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = pm25$`Fecha inicial`, y = pm25$PM2.5, type = 'l', col = 'red3', lwd = 1,
ylim = c(min(pm25$PM2.5), max(pm25$PM2.5)),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(h = seq(0, 200, by = 10), col = 'gray', lty = 'dashed')
abline(v = seq(0, 200, by = 1), col = 'gray', lty = 'dashed')
abline(v = seq(min(pm25$`Fecha inicial`), max(pm25$`Fecha inicial`), by = "6 months"),
col = 'gray', lty = 'dashed')
par(mar = c(3, 4.1, 4.1, 2.1))
par(mar = c(3, 4.1, 4.1, 2.1))
par(mar = c(3, 4.1, 4.1, 2.1))
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = pm25$`Fecha inicial`, y = pm25$PM2.5, type = 'l', col = 'red3', lwd = 1,
ylim = c(min(pm25$PM2.5), max(pm25$PM2.5)),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(h = seq(0, 200, by = 10), col = 'gray', lty = 'dashed')
abline(v = seq(min(pm25$`Fecha inicial`), max(pm25$`Fecha inicial`), by = "6 months"),
col = 'gray', lty = 'dashed')
legend('topright', legend = 'PM2.5', col = 'red3', lty = 1, lwd = 1, bty = 'n')
acf(pm25$PM2.5, lag.max = 30, main = 'Autocorrelacion de la Serie de Tiempo PM2.5',
xlab = 'Lag', ylab = 'Autocorrelacion')
library(readr)
library(dplyr)
pm25 <- read_csv("C:/Users/capst/Downloads/Usaqu_n_pm25.csv",
+     col_types = cols(`Fecha final` = col_skip()))
View(pm25)
pm25 <- pm25 %>% arrange(`Fecha inicial`)
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = pm25$`Fecha inicial`, y = pm25$PM2.5, type = 'l', col = 'red3', lwd = 1,
ylim = c(min(pm25$PM2.5), max(pm25$PM2.5)),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(h = seq(0, 200, by = 10), col = 'gray', lty = 'dashed')
abline(v = seq(min(pm25$`Fecha inicial`), max(pm25$`Fecha inicial`), by = "6 months"),
col = 'gray', lty = 'dashed')
legend('topright', legend = 'PM2.5', col = 'red3', lty = 1, lwd = 1, bty = 'n')
library(readr)
library(dplyr)
pm25 <- read_csv("C:/Users/capst/Downloads/Usaqu_n_pm25.csv",
+     col_types = cols(`Fecha final` = col_skip()))
pm25 <- read_csv("C:/Users/capst/Downloads/Usaqu_n_pm25.csv")
View(pm25)
pm25 <- pm25 %>% arrange(`Fecha inicial`)
par(mar = c(3, 4.1, 4.1, 2.1))
plot(x = pm25$`Fecha inicial`, y = pm25$PM2.5, type = 'l', col = 'red3', lwd = 1,
ylim = c(min(pm25$PM2.5), max(pm25$PM2.5)),
main = 'Indice PM25 de Calidad del Aire en Usaquen', xlab = NA, ylab = 'Indice PM25')
# Additional information
mtext(bquote(bold('Medicion diaria del Indice de Calidad del Aire')), side = 3,
col = 'gray', line = 0.35)
mtext('Calidad el Aire Repotada por la Secretaria de Ambiente', side = 1,
line = -1.1, cex = 0.8, adj = 0.99, col = 'darkgray')
# Reference lines
abline(h = seq(0, 200, by = 10), col = 'gray', lty = 'dashed')
abline(v = seq(min(pm25$`Fecha inicial`), max(pm25$`Fecha inicial`), by = "6 months"),
col = 'gray', lty = 'dashed')
legend('topright', legend = 'PM2.5', col = 'red3', lty = 1, lwd = 1, bty = 'n')
acf(pm25$PM2.5, lag.max = 30, main = 'Autocorrelacion de la Serie de Tiempo PM2.5',
xlab = 'Lag', ylab = 'Autocorrelacion')
setwd("~/REPOS GIT/Ciencia_de_Datos/Datos")
library(readr)
test <- read_csv("test.csv")
View(test)
train <- read_csv("train.csv")
data <- rbind(test, train)
write.csv(data, "data.csv")
# Variables categóricas (cualitativas)
categorical_vars <- data %>% select(
race.AfricanAmerican, race.Asian, race.Caucasian, race.Hispanic, race.Other,
gender.Female, gender.Male,
age.70, age.0_10, age.10_20, age.20_50, age.50_70,
admission_type_id.Elective, admission_type_id.Emergency, admission_type_id.New_Born, admission_type_id.Trauma_Center,
discharge_disposition_id.Discharged_to_Home, discharge_disposition_id.Other,
admission_source_id.Emergency, admission_source_id.Other, admission_source_id.Referral, admission_source_id.Transfer,
medical_specialty.Cardiology, medical_specialty.Emergency.Trauma, medical_specialty.Family.GeneralPractice, medical_specialty.Gastroenterology,
diag_1.Circulatory, diag_1.Diabetes, diag_1.Digestive, diag_1.Genitourinary,
A1Cresult._7, A1Cresult._8, A1Cresult.None, A1Cresult.Norm,
max_glu_serum._200, max_glu_serum._300, max_glu_serum.None, max_glu_serum.Norm
)
library(dplyr)
# Variables categóricas (cualitativas)
categorical_vars <- data %>% select(
race.AfricanAmerican, race.Asian, race.Caucasian, race.Hispanic, race.Other,
gender.Female, gender.Male,
age.70, age.0_10, age.10_20, age.20_50, age.50_70,
admission_type_id.Elective, admission_type_id.Emergency, admission_type_id.New_Born, admission_type_id.Trauma_Center,
discharge_disposition_id.Discharged_to_Home, discharge_disposition_id.Other,
admission_source_id.Emergency, admission_source_id.Other, admission_source_id.Referral, admission_source_id.Transfer,
medical_specialty.Cardiology, medical_specialty.Emergency.Trauma, medical_specialty.Family.GeneralPractice, medical_specialty.Gastroenterology,
diag_1.Circulatory, diag_1.Diabetes, diag_1.Digestive, diag_1.Genitourinary,
A1Cresult._7, A1Cresult._8, A1Cresult.None, A1Cresult.Norm,
max_glu_serum._200, max_glu_serum._300, max_glu_serum.None, max_glu_serum.Norm
)
View(data)
names <- names(data)
names
# Variables categóricas (cualitativas)
categorical_vars <- data %>% select(
race:AfricanAmerican, race:Asian, race:Caucasian, race:Hispanic, race:Other,
gender:Female, gender.Male,
age.70, age.0_10, age.10_20, age.20_50, age.50_70,
admission_type_id.Elective, admission_type_id.Emergency, admission_type_id.New_Born, admission_type_id.Trauma_Center,
discharge_disposition_id.Discharged_to_Home, discharge_disposition_id.Other,
admission_source_id.Emergency, admission_source_id.Other, admission_source_id.Referral, admission_source_id.Transfer,
medical_specialty.Cardiology, medical_specialty.Emergency.Trauma, medical_specialty.Family.GeneralPractice, medical_specialty.Gastroenterology,
diag_1.Circulatory, diag_1.Diabetes, diag_1.Digestive, diag_1.Genitourinary,
A1Cresult._7, A1Cresult._8, A1Cresult.None, A1Cresult.Norm,
max_glu_serum._200, max_glu_serum._300, max_glu_serum.None, max_glu_serum.Norm
)
# Variables categóricas (cualitativas)
categorical_vars <- data %>% select(
'race:AfricanAmerican', race:Asian, race:Caucasian, race:Hispanic, race:Other,
gender:Female, gender.Male,
age.70, age.0_10, age.10_20, age.20_50, age.50_70,
admission_type_id.Elective, admission_type_id.Emergency, admission_type_id.New_Born, admission_type_id.Trauma_Center,
discharge_disposition_id.Discharged_to_Home, discharge_disposition_id.Other,
admission_source_id.Emergency, admission_source_id.Other, admission_source_id.Referral, admission_source_id.Transfer,
medical_specialty.Cardiology, medical_specialty.Emergency.Trauma, medical_specialty.Family.GeneralPractice, medical_specialty.Gastroenterology,
diag_1.Circulatory, diag_1.Diabetes, diag_1.Digestive, diag_1.Genitourinary,
A1Cresult._7, A1Cresult._8, A1Cresult.None, A1Cresult.Norm,
max_glu_serum._200, max_glu_serum._300, max_glu_serum.None, max_glu_serum.Norm
)
# Variables categóricas (cualitativas)
categorical_vars <- data %>% select(
'race:AfricanAmerican', race.Asian, race:Caucasian, race:Hispanic, race:Other,
gender:Female, gender.Male,
age.70, age.0_10, age.10_20, age.20_50, age.50_70,
admission_type_id.Elective, admission_type_id.Emergency, admission_type_id.New_Born, admission_type_id.Trauma_Center,
discharge_disposition_id.Discharged_to_Home, discharge_disposition_id.Other,
admission_source_id.Emergency, admission_source_id.Other, admission_source_id.Referral, admission_source_id.Transfer,
medical_specialty.Cardiology, medical_specialty.Emergency.Trauma, medical_specialty.Family.GeneralPractice, medical_specialty.Gastroenterology,
diag_1.Circulatory, diag_1.Diabetes, diag_1.Digestive, diag_1.Genitourinary,
A1Cresult._7, A1Cresult._8, A1Cresult.None, A1Cresult.Norm,
max_glu_serum._200, max_glu_serum._300, max_glu_serum.None, max_glu_serum.Norm
)
# Variables Categóricas
categóricas <- c(
"race:AfricanAmerican", "race:Asian", "race:Caucasian", "race:Hispanic", "race:Other",
"gender:Female", "gender:Male",
"age:70+", "age:[0-10)", "age:[10-20)", "age:[20-50)", "age:[50-70)",
"admission_type_id:Elective", "admission_type_id:Emergency",
"discharge_disposition_id:Discharged to Home", "discharge_disposition_id:Other",
"admission_source_id:Emergency", "admission_source_id:Other",
"medical_specialty:Cardiology", "medical_specialty:Emergency/Trauma",
"diag_1:Circulatory", "diag_1:Diabetes", "diag_1:Digestive",
"A1Cresult:>7", "A1Cresult:>8", "A1Cresult:None", "A1Cresult:Norm",
"max_glu_serum:>200", "max_glu_serum:>300", "max_glu_serum:None", "max_glu_serum:Norm"
)
# Variables Numéricas
numéricas <- c(
"time_in_hospital", "num_lab_procedures", "num_procedures", "num_medications",
"number_outpatient", "number_emergency", "number_inpatient",
"number_diagnoses", "change", "diabetesMed"
)
# Seleccionar solo las variables categóricas
data_categóricas <- data[, categóricas]
# Seleccionar solo las variables numéricas
data_numéricas <- data[, numéricas]
data_categóricas
data <- data %>%
mutate(Raza = case_when(
`race:AfricanAmerican` == 1 ~ "AfricanAmerican",
`race:Asian` == 1 ~ "Asian",
`race:Caucasian` == 1 ~ "Caucasian",
`race:Hispanic` == 1 ~ "Hispanic",
`race:Other` == 1 ~ "Other",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
View(data)
data <- data %>%
select(-`race:AfricanAmerican`, -`race:Asian`, -`race:Caucasian`, -`race:Hispanic`, -`race:Other`)
table(data$Raza)
data <- data %>%
mutate(Genero = case_when(
`gender:Female` == 1 ~ "Mujer",
`gender:Male` == 1 ~ "Hombre",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`gender:Female`, -`gender:Male`)
table(data$Genero)
data <- data %>%
mutate(Edad = case_when(
`age:70+` == 1 ~ "70+",
`age:[0-10)` == 1 ~ "[0-10)",
`age:[10-20)` == 1 ~ "[10-20)",
`age:[20-50)` == 1 ~ "[20-50)",
`age:[50-70)` == 1 ~ "[50-70)",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`age:70+`, -`age:[0-10)`, -`age:[10-20)`, -`age:[20-50)`, -`age:[50-70)`)
table(data$Edad)
data <- data %>%
mutate(TipoAdmision = case_when(
`admission_type_id:Elective` == 1 ~ "Electiva",
`admission_type_id:Emergency` == 1 ~ "Emergencia",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`admission_type_id:Elective`, -`admission_type_id:Emergency`)
table(data$TipoAdmision)
table(data$DestinoAlta)
data <- data %>%
mutate(DestinoAlta = case_when(
`discharge_disposition_id:Discharged to Home` == 1 ~ "Dado de alta a casa",
`discharge_disposition_id:Other` == 1 ~ "Otro",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`discharge_disposition_id:Discharged to Home`, -`discharge_disposition_id:Other`)
table(data$DestinoAlta)
data <- data %>%
mutate(FuenteAdmision = case_when(
`admission_source_id:Emergency` == 1 ~ "Emergencia",
`admission_source_id:Other` == 1 ~ "Otro",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`admission_source_id:Emergency`, -`admission_source_id:Other`)
table(data$FuenteAdmision)
data <- data %>%
mutate(Especialidad = case_when(
`medical_specialty:Cardiology` == 1 ~ "Cardiología",
`medical_specialty:Emergency/Trauma` == 1 ~ "Emergencia/Trauma",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`medical_specialty:Cardiology`, -`medical_specialty:Emergency/Trauma`)
table(data$Especialidad)
data <- data %>%
mutate(Diagnostico = case_when(
`diag_1:Circulatory` == 1 ~ "Circulatorio",
`diag_1:Diabetes` == 1 ~ "Diabetes",
`diag_1:Digestive` == 1 ~ "Digestivo",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`diag_1:Circulatory`, -`diag_1:Diabetes`, -`diag_1:Digestive`)
table(data$Diagnostico)
data <- data %>%
mutate(ResultadoA1C = case_when(
`A1Cresult:>7` == 1 ~ ">7",
`A1Cresult:>8` == 1 ~ ">8",
`A1Cresult:None` == 1 ~ "Ninguno",
`A1Cresult:Norm` == 1 ~ "Normal",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`A1Cresult:>7`, -`A1Cresult:>8`, -`A1Cresult:None`, -`A1Cresult:Norm`)
table(data$ResultadoA1C)
data <- data %>%
mutate(ResultadoGlu = case_when(
`max_glu_serum:>200` == 1 ~ ">200",
`max_glu_serum:>300` == 1 ~ ">300",
`max_glu_serum:None` == 1 ~ "Ninguno",
`max_glu_serum:Norm` == 1 ~ "Normal",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`max_glu_serum:>200`, -`max_glu_serum:>300`, -`max_glu_serum:None`, -`max_glu_serum:Norm`)
table(data$ResultadoGlu)
categóricas <- c('Raza', 'Genero', 'Edad', 'TipoAdmision', 'DestinoAlta',
'FuenteAdmision', 'Especialidad', 'Diagnostico', 'ResultadoA1C',
'ResultadoGlu')
# Seleccionar solo las variables categóricas
data_categóricas <- data[, categóricas]
numéricas <- c(
"time_in_hospital", "num_lab_procedures", "num_procedures", "num_medications",
"number_outpatient", "number_emergency", "number_inpatient",
"number_diagnoses", "change", "diabetesMed"
)
# Seleccionar solo las variables numéricas
data_numéricas <- data[, numéricas]
data_categóricas
table(data$Especialidad)
data_numéricas
data1 <- cbind(data_categóricas, data_numéricas)
data1
sapply(data1, function(x) sum(is.na(x)))
names
data <- data %>%
mutate(Diag = case_when(
`diag_1:Circulatory` == 1 ~ "Circulatorio",
`diag_1:Diabetes` == 1 ~ "Diabetes",
`diag_1:Digestive` == 1 ~ "Digestivo",
`diag_1:Genitourinary` == 1 ~ "Genitourinario",
`diag_1:Injury` == 1 ~ "Lesión",
`diag_1:Musculoskeletal` == 1 ~ "Musculoesquelético",
`diag_1:Neoplasms` == 1 ~ "Neoplasmas",
`diag_1:Other` == 1 ~ "Otro",
`diag_1:Respiratory` == 1 ~ "Respiratorio",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`diag_1:Circulatory`, -`diag_1:Diabetes`, -`diag_1:Digestive`,
-`diag_1:Genitourinary`, -`diag_1:Injury`, -`diag_1:Musculoskeletal`,
-`diag_1:Neoplasms`, -`diag_1:Other`, -`diag_1:Respiratory`)
data <- data %>%
mutate(Diag = case_when(
`diag_1:Circulatory` == 1 ~ "Circulatorio",
`diag_1:Diabetes` == 1 ~ "Diabetes",
`diag_1:Digestive` == 1 ~ "Digestivo",
`diag_1:Genitourinary` == 1 ~ "Genitourinario",
`diag_1:Injury` == 1 ~ "Lesión",
`diag_1:Musculoskeletal` == 1 ~ "Musculoesquelético",
`diag_1:Neoplasms` == 1 ~ "Neoplasmas",
`diag_1:Other` == 1 ~ "Otro",
`diag_1:Respiratory` == 1 ~ "Respiratorio",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
table(data$readmitted)
data <- data %>%
mutate(Insulina = case_when(
`insulin:Down` == 1 ~ "Bajada",
`insulin:No` == 1 ~ "No",
`insulin:Steady` == 1 ~ "Estable",
`insulin:Up` == 1 ~ "Subida",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`insulin:Down`, -`insulin:No`, -`insulin:Steady`, -`insulin:Up`)
table(data$Insulina)
data <- data %>%
mutate(Gliburida = case_when(
`glyburide:Down` == 1 ~ "Bajada",
`glyburide:No` == 1 ~ "No",
`glyburide:Steady` == 1 ~ "Estable",
`glyburide:Up` == 1 ~ "Subida",
TRUE ~ NA_character_  # Valor NA en caso de que ninguna de las indicadoras sea 1
))
data <- data %>%
select(-`glyburide:Down`, -`glyburide:No`, -`glyburide:Steady`, -`glyburide:Up`)
table(data$Gliburida)
categóricas <- c('Raza', 'Genero', 'Edad', 'TipoAdmision', 'DestinoAlta',
'ResultadoA1C', 'ResultadoGlu',"Glliburida" , "Insulina", "readmitted")
# Seleccionar solo las variables categóricas
data_categóricas <- data[, categóricas]
categóricas <- c('Raza', 'Genero', 'Edad', 'TipoAdmision', 'DestinoAlta',
'ResultadoA1C', 'ResultadoGlu',"Gliburida" , "Insulina", "readmitted")
# Seleccionar solo las variables categóricas
data_categóricas <- data[, categóricas]
numéricas <- c(
"time_in_hospital", "num_lab_procedures", "num_procedures", "num_medications",
"number_outpatient", "number_emergency", "number_inpatient",
"number_diagnoses", "change", "diabetesMed"
)
# Seleccionar solo las variables numéricas
data_numéricas <- data[, numéricas]
data1 <- cbind(data_categóricas, data_numéricas)
sapply(data1, function(x) sum(is.na(x)))
data1 <- data1 %>% drop_na()
library(tidyr)
data1 <- data1 %>%
drop_na()
sapply(data1, function(x) sum(is.na(x)))
write.csv(data1, "data1.csv")
