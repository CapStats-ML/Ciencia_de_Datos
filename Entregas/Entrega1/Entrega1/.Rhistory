coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Nateglinide = case_when(
`nateglinide:Down` == 1 ~ "Disminuido",
`nateglinide:No` == 1 ~ "No",
`nateglinide:Steady` == 1 ~ "Estable",
`nateglinide:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`nateglinide:Down`, -`nateglinide:No`, -`nateglinide:Steady`, -`nateglinide:Up`)
chlorpropamide <- c("chlorpropamide:Down", "chlorpropamide:No", "chlorpropamide:Steady", "chlorpropamide:Up")
Prop_chlorpropamide <- sapply(data[chlorpropamide], mean)
T_Prop_chlorpropamide <- data.frame(
Variable = chlorpropamide,
Proporcion = as.vector(Prop_chlorpropamide)
)
T_Prop_chlorpropamide <- T_Prop_chlorpropamide[order(T_Prop_chlorpropamide$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_chlorpropamide,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Chlorpropamide"
)
T_Prop_chlorpropamide %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN CHLORPROPAMIDE",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Chlorpropamide = case_when(
`chlorpropamide:Down` == 1 ~ "Disminuido",
`chlorpropamide:No` == 1 ~ "No",
`chlorpropamide:Steady` == 1 ~ "Estable",
`chlorpropamide:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`chlorpropamide:Down`, -`chlorpropamide:No`, -`chlorpropamide:Steady`, -`chlorpropamide:Up`)
glipizide <- c("glipizide:Down", "glipizide:No", "glipizide:Steady", "glipizide:Up")
Prop_glipizide <- sapply(data[glipizide], mean)
T_Prop_glipizide <- data.frame(
Variable = glipizide,
Proporcion = as.vector(Prop_glipizide)
)
T_Prop_glipizide <- T_Prop_glipizide[order(T_Prop_glipizide$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_glipizide,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Glimepiride"
)
T_Prop_glipizide %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN GLIPIZIDE",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Glipizide = case_when(
`glipizide:Down` == 1 ~ "Disminuido",
`glipizide:No` == 1 ~ "No",
`glipizide:Steady` == 1 ~ "Estable",
`glipizide:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`glipizide:Down`, -`glipizide:No`, -`glipizide:Steady`, -`glipizide:Up`)
glyburide <- c("glyburide:Down", "glyburide:No", "glyburide:Steady", "glyburide:Up")
Prop_glyburide <- sapply(data[glyburide], mean)
T_Prop_glyburide <- data.frame(
Variable = glyburide,
Proporcion = as.vector(Prop_glyburide)
)
T_Prop_glyburide <- T_Prop_glyburide[order(T_Prop_glyburide$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_glyburide,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Gliplizide"
)
T_Prop_glyburide %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN GLYBURIDE",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Glyburide = case_when(
`glyburide:Down` == 1 ~ "Disminuido",
`glyburide:No` == 1 ~ "No",
`glyburide:Steady` == 1 ~ "Estable",
`glyburide:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`glyburide:Down`, -`glyburide:No`, -`glyburide:Steady`, -`glyburide:Up`)
str(data)
glimepiride <- c("glimepiride:Down", "glimepiride:No", "glimepiride:Steady", "glimepiride:Up")
Prop_glimepiride <- sapply(data[glimepiride], mean)
T_Prop_glimepiride <- data.frame(
Variable = glimepiride,
Proporcion = as.vector(Prop_glimepiride)
)
T_Prop_glimepiride <- T_Prop_glimepiride[order(T_Prop_glimepiride$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_glimepiride,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Glimepiride"
)
T_Prop_glimepiride %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN GLIMEPIRIDE",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Glimepiride = case_when(
`glimepiride:Down` == 1 ~ "Disminuido",
`glimepiride:No` == 1 ~ "No",
`glimepiride:Steady` == 1 ~ "Estable",
`glimepiride:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`glimepiride:Down`, -`glimepiride:No`, -`glimepiride:Steady`, -`glimepiride:Up`)
str(data)
pioglitazone <- c("pioglitazone:Down", "pioglitazone:No", "pioglitazone:Steady", "pioglitazone:Up")
Prop_pioglitazone <- sapply(data[pioglitazone], mean)
T_Prop_pioglitazone <- data.frame(
Variable = pioglitazone,
Proporcion = as.vector(Prop_pioglitazone)
)
T_Prop_pioglitazone <- T_Prop_pioglitazone[order(T_Prop_pioglitazone$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_pioglitazone,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Pioglitazone"
)
T_Prop_pioglitazone %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN PIOGLITAZONE",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Pioglitazone = case_when(
`pioglitazone:Down` == 1 ~ "Disminuido",
`pioglitazone:No` == 1 ~ "No",
`pioglitazone:Steady` == 1 ~ "Estable",
`pioiglitazone:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
str(data)
data <- data %>%
mutate(Pioglitazone = case_when(
`pioglitazone:Down` == 1 ~ "Disminuido",
`pioglitazone:No` == 1 ~ "No",
`pioglitazone:Steady` == 1 ~ "Estable",
`pioglitazone:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`pioglitazone:Down`, -`pioglitazone:No`, -`pioglitazone:Steady`, -`pioglitazone:Up`)
rosiglitazone <- c("rosiglitazone:Down", "rosiglitazone:No", "rosiglitazone:Steady", "rosiglitazone:Up")
Prop_rosiglitazone <- sapply(data[rosiglitazone], mean)
T_Prop_rosiglitazone <- data.frame(
Variable = rosiglitazone,
Proporcion = as.vector(Prop_rosiglitazone)
)
T_Prop_rosiglitazone <- T_Prop_rosiglitazone[order(T_Prop_rosiglitazone$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_rosiglitazone,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Rosiglitazone"
)
T_Prop_rosiglitazone %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN ROSIGLITAZONE",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Rosiglitazone = case_when(
`rosiglitazone:Down` == 1 ~ "Disminuido",
`rosiglitazone:No` == 1 ~ "No",
`rosiglitazone:Steady` == 1 ~ "Estable",
`rosiglitazone:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`rosiglitazone:Down`, -`rosiglitazone:No`, -`rosiglitazone:Steady`, -`rosiglitazone:Up`)
str(data)
acarbose <- c("acarbose:Down", "acarbose:No", "acarbose:Steady", "acarbose:Up")
Prop_acarbose <- sapply(data[acarbose], mean)
T_Prop_acarbose <- data.frame(
Variable = acarbose,
Proporcion = as.vector(Prop_acarbose)
)
T_Prop_acarbose <- T_Prop_acarbose[order(T_Prop_acarbose$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_acarbose,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Acarbose"
)
T_Prop_acarbose %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN ACARBOSE",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Acarbose = case_when(
`acarbose:Down` == 1 ~ "Disminuido",
`acarbose:No` == 1 ~ "No",
`acarbose:Steady` == 1 ~ "Estable",
`acarbose:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`acarbose:Down`, -`acarbose:No`, -`acarbose:Steady`, -`acarbose:Up`)
miglitol <- c("miglitol:Down", "miglitol:No", "miglitol:Steady", "miglitol:Up")
Prop_miglitol <- sapply(data[miglitol], mean)
T_Prop_miglitol <- data.frame(
Variable = miglitol,
Proporcion = as.vector(Prop_miglitol)
)
T_Prop_miglitol <- T_Prop_miglitol[order(T_Prop_miglitol$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_miglitol,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Miglitol"
)
T_Prop_miglitol %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN MIGLITOL",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Miglitol = case_when(
`miglitol:Down` == 1 ~ "Disminuido",
`miglitol:No` == 1 ~ "No",
`miglitol:Steady` == 1 ~ "Estable",
`miglitol:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`miglitol:Down`, -`miglitol:No`, -`miglitol:Steady`, -`miglitol:Up`)
tolazamide <- c("tolazamide:Down", "tolazamide:No", "tolazamide:Steady", "tolazamide:Up")
Prop_tolazamide <- sapply(data[tolazamide], mean)
T_Prop_tolazamide <- data.frame(
Variable = tolazamide,
Proporcion = as.vector(Prop_tolazamide)
)
T_Prop_tolazamide <- T_Prop_tolazamide[order(T_Prop_tolazamide$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_tolazamide,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Tolazamide"
)
:No", "tolazamide:Steady", "tolazamide
tolazamide <- c("tolazamide:Down", "tolazamide:No", "tolazamide:Steady", "tolazamide:Up")
Prop_tolazamide <- sapply(data[tolazamide], mean)
tolazamide <- c("tolazamide:No", "tolazamide:Steady", "tolazamide:Up")
Prop_tolazamide <- sapply(data[tolazamide], mean)
T_Prop_tolazamide <- data.frame(
Variable = tolazamide,
Proporcion = as.vector(Prop_tolazamide)
)
T_Prop_tolazamide <- T_Prop_tolazamide[order(T_Prop_tolazamide$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_tolazamide,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Tolazamide"
)
T_Prop_tolazamide %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN TOLAZAMIDE",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Tolazamide = case_when(
`tolazamide:Down` == 1 ~ "Disminuido",
`tolazamide:No` == 1 ~ "No",
`tolazamide:Steady` == 1 ~ "Estable",
`tolazamide:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
mutate(Tolazamide = case_when(
`tolazamide:No` == 1 ~ "No",
`tolazamide:Steady` == 1 ~ "Estable",
`tolazamide:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select( -`tolazamide:No`, -`tolazamide:Steady`, -`tolazamide:Up`)
str(data)
insulin <- c("insulin:Down", "insulin:No", "insulin:Steady", "insulin:Up")
Prop_insulin <- sapply(data[insulin], mean)
T_Prop_insulin <- data.frame(
Variable = insulin,
Proporcion = as.vector(Prop_insulin)
)
T_Prop_insulin <- T_Prop_insulin[order(T_Prop_insulin$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_insulin,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Insulin"
)
T_Prop_insulin %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN INSULIN",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Insulin = case_when(
`insulin:Down` == 1 ~ "Disminuido",
`insulin:No` == 1 ~ "No",
`insulin:Steady` == 1 ~ "Estable",
`insulin:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`insulin:Down`, -`insulin:No`, -`insulin:Steady`, -`insulin:Up`)
str(data)
glyburide_metformin <- c("glyburide-metformin:Down", "glyburide-metformin:No", "glyburide-metformin:Steady", "glyburide-metformin:Up")
Prop_glyburide_metformin <- sapply(data[glyburide_metformin], mean)
T_Prop_glyburide_metformin <- data.frame(
Variable = glyburide_metformin,
Proporcion = as.vector(Prop_glyburide_metformin)
)
T_Prop_glyburide_metformin <- T_Prop_glyburide_metformin[order(T_Prop_glyburide_metformin$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_glyburide_metformin,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Glyburide-Metformin"
)
T_Prop_glyburide_metformin %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN GLYBURIDE-METFORMIN",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Glyburide_Metformin = case_when(
`glyburide-metformin:Down` == 1 ~ "Disminuido",
`glyburide-metformin:No` == 1 ~ "No",
`glyburide-metformin:Steady` == 1 ~ "Estable",
`glyburide-metformin:Up` == 1 ~ "Aumentado",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`glyburide-metformin:Down`, -`glyburide-metformin:No`, -`glyburide-metformin:Steady`, -`glyburide-metformin:Up`)
str(data)
A1Cresult <- c("A1Cresult:Norm", "A1Cresult:None", "A1Cresult:>7", "A1Cresult:>8")
Prop_A1Cresult <- sapply(data[A1Cresult], mean)
T_Prop_A1Cresult <- data.frame(
Variable = A1Cresult,
Proporcion = as.vector(Prop_A1Cresult)
)
T_Prop_A1Cresult <- T_Prop_A1Cresult[order(T_Prop_A1Cresult$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_A1Cresult,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en A1Cresult"
)
T_Prop_A1Cresult %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN A1CRESULT",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(A1Cresult = case_when(
`A1Cresult:Norm` == 1 ~ "Normal",
`A1Cresult:None` == 1 ~ "No",
`A1Cresult:>7` == 1 ~ "Mayor a 7",
`A1Cresult:>8` == 1 ~ "Mayor a 8",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`A1Cresult:Norm`, -`A1Cresult:None`, -`A1Cresult:>7`, -`A1Cresult:>8`)
str(data)
max_glu_serum <- c("max_glu_serum:Norm", "max_glu_serum:None", "max_glu_serum:>200", "max_glu_serum:>300")
Prop_max_glu_serum <- sapply(data[max_glu_serum], mean)
T_Prop_max_glu_serum <- data.frame(
Variable = max_glu_serum,
Proporcion = as.vector(Prop_max_glu_serum)
)
T_Prop_max_glu_serum <- T_Prop_max_glu_serum[order(T_Prop_max_glu_serum$Proporcion, decreasing = TRUE), ]
kable(
T_Prop_max_glu_serum,
format = "markdown",
col.names = c("Variable", "Proporción"),
caption = "Proporciones de las variables en Max Glu Serum"
)
T_Prop_max_glu_serum %>%
ggplot(aes(x = reorder(Variable, Proporcion), y = Proporcion)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
ggtitle(label = "PROPORCION DE LAS VARIABLES EN MAX GLU SERUM",
subtitle = "PERFILES DE PACIENTES CON DIABETES") +
labs(x = "Variable", y = "Proporción") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
legend.position = "none", text = element_text(size = 10),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5, color = "grey50"))
data <- data %>%
mutate(Max_Glu_Serum = case_when(
`max_glu_serum:Norm` == 1 ~ "Normal",
`max_glu_serum:None` == 1 ~ "No",
`max_glu_serum:>200` == 1 ~ "Mayor a 200",
`max_glu_serum:>300` == 1 ~ "Mayor a 300",
TRUE ~ "Desconocido"
))
data <- data %>%
select(-`max_glu_serum:Norm`, -`max_glu_serum:None`, -`max_glu_serum:>200`, -`max_glu_serum:>300`)
str(data)
Genero <- c("gender:Female", "gender:Male")
Prop_Genero <- sapply(data[Genero], mean)
